<?xml version="1.0"?>

<project name="JasperReports For Java" default="war" basedir="."  >
    <property file="ant.properties" />
    
	<path id="classpath">
        <pathelement location="build/WEB-INF/classes"/>
        <fileset dir="${jasperreports.lib.dir}">
            <include name="**/*.jar" />
        </fileset>
        <pathelement location="${tomcat.dir}/lib/servlet-api.jar"/>
    </path>

    <target name="clean" description="Clears all generated files, including build directories, distributables, and documentation.">
        <delete dir="${build.dir}" />
        <delete dir="${war.dir}" />
        <delete>
            <fileset dir="${reports.dir}">
                <include name="**/*.jasper" />
            </fileset>
            <fileset dir="${reports.dir}">
                <include name="**/*.jrprint" />
            </fileset>
        </delete>
    </target>

    <target name="compileReports" description="Compiles the JRXML templates into Jasper files and moves them to
    			appropriate location for the war file." >
    	<echo message="classpath: ${toString:classpath}"/>
    	<taskdef name="jrc" classname="net.sf.jasperreports.ant.JRAntCompileTask">
            <classpath refid="classpath" />
        </taskdef>       

        <jrc>
            <src>
                <fileset dir="${reports.dir}">
                    <include name="**/*.jrxml" />
                </fileset>
            </src>
            <classpath refid="classpath" />
        </jrc>
    	
    	<!-- A property file with a root name matching the value of the attribute must exist anywhere
        	 in the CLASSPATH when filling the report. Hence the properties file need to be under 
        	 the /WEB-INF/classes path which is the default classpath for the web application -->
    	<copy todir="${build.dir}/reports">
            <fileset dir="${reports.dir}">
            	<include name="**/*" />
            	<exclude name="**/*.jrxml" />
            	<exclude name="**/*.properties" />
            </fileset>
        </copy>
    	
    	<copy todir="${build.dir}/WEB-INF/classes">
    	   	<fileset dir="${reports.dir}" includes="**/*.properties" />
    	</copy>
    	
    	<!-- Copy the JSPs and javascript -->
        <copy todir="${build.dir}/jsps">
    	   	<fileset dir="${jsp.dir}" includes="**/*.jsp" />
    	</copy>
    	
        <copy todir="${build.dir}/js">
    	   	<fileset dir="${js.dir}" includes="**/*.js" />
    	</copy>
    	
    	<!--Create an empty tmp directory that will be used to save the intermediate files before 
    		exporting them. Also copy the README.md to this directory as the jar task does NOT pick
    		up empty directories -->
    	<mkdir dir="${build.dir}/tmp"/>
    	<copy file="README.md" todir="${build.dir}/tmp">
    		
    	</copy>
    </target>

	<!-- Set the "rpt" varaible to the name of a valid report file in "ant.properties" before launching this target -->
    <target name="viewDesignXML" description="Launches the design viewer to preview the XML report design." >
        <java classname="net.sf.jasperreports.view.JasperDesignViewer" fork="true">
            <arg value="-XML" />
            <arg value="-F${reports.dir}/${rpt}.jrxml" />
            <classpath refid="classpath" />
        </java>
    </target>

	<!-- Set the "rpt" varaible to the name of a valid report file in "ant.properties" before launching this target -->
    <target name="viewDesign" description="Launches the design viewer to preview the compiled report design." >
        <java classname="net.sf.jasperreports.view.JasperDesignViewer" fork="true">
            <arg value="-F${reports.dir}/${rpt}.jasper" />
            <classpath refid="classpath" />
        </java>
    </target>

	<target name="fillReport" description="Fills reports that don't require a datasource.">
	        <java classname="net.ensode.jasperbook.EmptyDSReportFill" fork="true">
	            <arg value="${rpt}" />
	            <classpath refid="classpath" />
	        </java>
	    </target>

    <target name="fillDbReport" description="Fills reports that use the Flight Stats Database.">
        <java classname="net.ensode.jasperbook.DbConnectionReportFill" fork="true">
            <arg value="${rpt}" />
            <classpath refid="classpath" />
        </java>
    </target>
	
    <target name="export" description="Exports Report to PDF, CSV, XLS, etc.">
        <java classname="net.ensode.jasperbook.${class}" fork="true">
            <arg value="${rpt}" />
            <classpath refid="classpath" />
        </java>
    </target>

	<!-- Set the "rpt" varaible to the name of a valid report file in "ant.properties" before launching this target -->
    <target name="view" description="Launches the report viewer to preview the report stored in the .jrprint file." >
        <java classname="net.sf.jasperreports.view.JasperViewer" fork="true">
            <arg value="-F${reports.dir}/${rpt}.jrprint" />
            <classpath refid="classpath" />
        </java>
    </target>

    <target name="compile" description="Compiles the application and arranges resources into a web archive hierarchy." >
        <mkdir dir="${build.dir}/WEB-INF/classes" />
        <mkdir dir="${build.dir}/WEB-INF/lib" />
		<!-- JasperReports library -->
    	<!-- 
    		iText is needed when exporting to PDF
    		BeanUtils and Collections are  needed when using Bean (POJO) datasources 
    		xalan is needed when using XML datasources
    	-->
    	<copy todir="${build.dir}/WEB-INF/lib">
        	<fileset dir="${jasperreports.lib.dir}">
    			<include name="*.jar"/>
    		</fileset>
        </copy>
		
    	<copy todir="${build.dir}/WEB-INF">
            <fileset dir="${src.deploy.dir}" />
        </copy>

    	<copy todir="${build.dir}/WEB-INF/classes">
            <fileset dir="${src.dir}">
            	<include name="**/*.xml"/>
            </fileset>
        </copy>
    		
        <javac srcdir="${src.dir}" destdir="${build.dir}/WEB-INF/classes" debug="${debug}" deprecation="yes">
            <classpath refid="classpath"/>
        </javac>
       
    </target>

    <target name="war" depends="clean, compile, compileReports" description="Builds a web archive of the application.">
        <mkdir dir="${war.dir}" />
        <jar jarfile="${war.dir}/${warfile}" basedir="${build.dir}"/>
    </target>

    <target name="deploy" depends="war">
        <echo message=" deploying ${war.dir}/${warfile} to ${deploy.dir}"/>
        <copy file="${war.dir}/${warfile}" todir="${deploy.dir}" overwrite="true"/>
    </target>

</project>
